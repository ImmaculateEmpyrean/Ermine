static bool l = true;
	
	auto Manager = Ermine::GlobalTextureCache::Get();
	static auto Tex = Manager->GetTextureFromFile("Texture/St.MichaelHeraldry.png");

	static Sprite* spr = new Sprite(Tex, { 0.0f,0.0f }, { 1.0f,1.0f });
	static std::shared_ptr<Sprite> ShSpr;

	if (l == true)
	{
		ShSpr.reset(spr);
		l = false;
	}

	static Ermine::Actor2D* Act = new Ermine::Actor2D(ShSpr);
	//Act->Translate({ 0.5f,0.5f });

	LayerStackLayer Layer("Han");
	Layer.SubmitRenderable(Act);

	//Ended Tilemap Drawing Routine//

	static int  ind = 10;
	static bool SuiteOn = false;
	static bool TranslateOn = false;
	static bool ScaleOn = false;
	static bool RotateOn = false;

	static float Position[2] = { 0.0f,0.0f };
	static float Scale[2] = { 1.0f,1.0f };
	static float rotation = 0.0f;

	ImGui::Begin("Control Panel");
	ImGui::Checkbox("Test Suite", &SuiteOn);
	ImGui::Checkbox("Test Suite Only Translation", &TranslateOn);
	ImGui::Checkbox("Test Suite Only Scale", &ScaleOn);
	ImGui::Checkbox("Test Suite Only Rotation", &RotateOn);

	ImGui::Text("Set Position Of The Heraldic Shield : ");
	ImGui::SameLine();
	ImGui::InputFloat2("##Heraldry Position", Position);
	ImGui::SameLine();
	if(ImGui::Button("Apply##Pos"))
	{
		Act->SetPosition(Position[0], Position[1]);
	}

	ImGui::Text("Set Scale Of The Heraldic Shield : ");				
	ImGui::SameLine();
	ImGui::InputFloat2("##Heraldry Rotation", Scale);
	ImGui::SameLine();
	if (ImGui::Button("Apply##Scale"))
	{
		Act->SetScale(Scale[0], Scale[1]);
	}

	ImGui::Text("Set Rotation Of The Heraldic Shield : ");
	ImGui::SameLine();
	ImGui::InputFloat("##Heraldry Rotation", &rotation);
	ImGui::SameLine();
	if (ImGui::Button("Apply##Rotate"))
	{
		Act->SetRotation(rotation);
	}

	ImGui::Image((ImTextureID)Manager->GetTextureFromFile("Texture/St.MichaelHeraldry.png")->GetTextureID(), { 50,50 });
	ImGui::End();


	Renderer2D::BeginScene();
	Renderer2D::SubmitLayer(Layer);
	Renderer2D::EndScene();

	if (SuiteOn == true)
	{
		Act->Translate({ 5.0f,5.0f });
		Act->Scale(1.005f, 1.005f);
		Act->Rotate(1.0f);
	}
	if (TranslateOn == true)
	{
		Act->Translate({ 5.0f,5.0f });
	}
	if (ScaleOn == true)
	{
		Act->Scale(1.005f, 1.005f);
	}
	if (RotateOn == true)
	{
		Act->Rotate(2.0f);
	}